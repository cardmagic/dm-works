* Avoid consuming "delegate" methods; though the performance cost may be pitiful,
  it's a needless one, so don't be lazy
* Avoid warnings: Use parenthesis if you need, etc
* Avoid external dependencies on helper libraries like Facets or ActiveSupport
* Spec at a high level at least
* Try to use/flesh-out the fixtures
* Helpers go in /lib/extensions
* Core classes go in /lib
* Groups of like classes go in /lib/folder, ie: /lib/queries
* Favor classes over mixins!!!
  Ideally the mixins should only provide convenience methods that delegate to core methods
* Symbols for constants, like columns
* Keep DataMapper::Base and other "core" classes as light as possible for ease of maintenance
* Run "rake perf" occassionally to make sure performance stays competitive
* Be nice to other coders
* When it's as easy to do it as not, prefer configurability
* SyntacticVinegar is punishable by death
* Whenever possible, draw on the experience in the PoEAA and other common O/R-M patterns
* Try to keep database specific details limited to the adapter(s)
* Work from the TODO list, make sure it stays current, if you end up working outside
  of it and accomplish something, make sure it gets added to the list and marked as
  completed anyways so we can have an idea of the progress we're making
* Keep interface compatibility with ActiveRecord whenever possible; ideally we should be
  able to swap out require() statements and database setup and be running under the
  DataMapper instead
